
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORIMPLIESleftANDrightNOTAND OR IMPLIES NOT BEFORE OVERLAPS INCLUDES EXIST FORALL COMMA DOT SAME LPAREN RPAREN NAME NUMBER STRINGformula : formula AND formulaformula : formula OR formulaformula : formula IMPLIES formulaformula : NOT formulaformula : NAME BEFORE NAMEformula : NAME OVERLAPS NAMEformula : NAME INCLUDES NAMEformula : NAME LPAREN data RPARENformula : SAME LPAREN NAME COMMA NAME RPARENformula : EXIST names DOT formulaformula : FORALL names DOT formulaformula : LPAREN formula RPARENdata : NUMBERdata : STRINGnames : NAMEnames : names COMMA NAME'
    
_lr_action_items = {'NOT':([0,2,4,8,9,10,32,34,],[2,2,2,2,2,2,2,2,]),'NAME':([0,2,4,6,7,8,9,10,12,13,14,17,32,33,34,36,],[3,3,3,19,19,3,3,3,24,25,26,31,3,38,3,40,]),'SAME':([0,2,4,8,9,10,32,34,],[5,5,5,5,5,5,5,5,]),'EXIST':([0,2,4,8,9,10,32,34,],[6,6,6,6,6,6,6,6,]),'FORALL':([0,2,4,8,9,10,32,34,],[7,7,7,7,7,7,7,7,]),'LPAREN':([0,2,3,4,5,8,9,10,32,34,],[4,4,15,4,17,4,4,4,4,4,]),'$end':([1,11,21,22,23,24,25,26,30,35,37,39,41,],[0,-4,-1,-2,-3,-5,-6,-7,-12,-8,-10,-11,-9,]),'AND':([1,11,16,21,22,23,24,25,26,30,35,37,39,41,],[8,-4,8,-1,8,8,-5,-6,-7,-12,-8,8,8,-9,]),'OR':([1,11,16,21,22,23,24,25,26,30,35,37,39,41,],[9,-4,9,-1,-2,-3,-5,-6,-7,-12,-8,9,9,-9,]),'IMPLIES':([1,11,16,21,22,23,24,25,26,30,35,37,39,41,],[10,-4,10,-1,-2,-3,-5,-6,-7,-12,-8,10,10,-9,]),'BEFORE':([3,],[12,]),'OVERLAPS':([3,],[13,]),'INCLUDES':([3,],[14,]),'RPAREN':([11,16,21,22,23,24,25,26,27,28,29,30,35,37,39,40,41,],[-4,30,-1,-2,-3,-5,-6,-7,35,-13,-14,-12,-8,-10,-11,41,-9,]),'NUMBER':([15,],[28,]),'STRING':([15,],[29,]),'DOT':([18,19,20,38,],[32,-15,34,-16,]),'COMMA':([18,19,20,31,38,],[33,-15,33,36,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'formula':([0,2,4,8,9,10,32,34,],[1,11,16,21,22,23,37,39,]),'names':([6,7,],[18,20,]),'data':([15,],[27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> formula","S'",1,None,None,None),
  ('formula -> formula AND formula','formula',3,'p_formula_1','parser.py',109),
  ('formula -> formula OR formula','formula',3,'p_formula_2','parser.py',114),
  ('formula -> formula IMPLIES formula','formula',3,'p_formula_3','parser.py',119),
  ('formula -> NOT formula','formula',2,'p_formula_4','parser.py',124),
  ('formula -> NAME BEFORE NAME','formula',3,'p_formula_5','parser.py',129),
  ('formula -> NAME OVERLAPS NAME','formula',3,'p_formula_6','parser.py',134),
  ('formula -> NAME INCLUDES NAME','formula',3,'p_formula_7','parser.py',139),
  ('formula -> NAME LPAREN data RPAREN','formula',4,'p_formula_8','parser.py',144),
  ('formula -> SAME LPAREN NAME COMMA NAME RPAREN','formula',6,'p_formula_9','parser.py',149),
  ('formula -> EXIST names DOT formula','formula',4,'p_formula_10','parser.py',154),
  ('formula -> FORALL names DOT formula','formula',4,'p_formula_11','parser.py',159),
  ('formula -> LPAREN formula RPAREN','formula',3,'p_formula_12','parser.py',164),
  ('data -> NUMBER','data',1,'p_data_1','parser.py',169),
  ('data -> STRING','data',1,'p_data_2','parser.py',174),
  ('names -> NAME','names',1,'p_names_1','parser.py',179),
  ('names -> names COMMA NAME','names',3,'p_names_2','parser.py',184),
]
